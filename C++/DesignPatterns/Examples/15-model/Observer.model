
class Observer
{
	public:
		Observer(){}
		virtual ~Observer(){}
		virtual void Update(){}
};

class Blog
{
	public:
		Blog(){}
		virtual ~Blog(){}
		void Attach(Observer *observer)
		{
			m_observers.push_back(observer);
		}
		void Remove(Observer *observer)
		{
			m_observers.remove(observer);
		}
		void Notify()
		{
			list<Observer *>::iterator iter = m_observers.begin();
			for(;iter!=m_observers.end();iter++)
				(*iter)->Update();
		}
		virtual voidSetStatus(string s)
		{
			m_status = s;
		}
		virtual string GetStatus()
		{
			return m_status;
		}
	private:
		list<Observer *> m_observers;
	protected:
		string m_status;
};



class BlogCSDN:public Blog
{
	public:
		BlogCSDN(string name):m_name(name)
		{

		}
		~BlogCSDN(){}
		void SetStatus(string s)
		{
			m_status = "CSDN通知:"+m_name+s;
		}	
		string GetStatus()
		{
			return m_status;
		}
	private:
		string m_name;
};


class ObserverBlog:public Observer
{
	public:
		ObserverBlog(string name, Blog *blog):m_name(name), m_blog(blog){}
		~ObserverBlog(){}
		void Update()
		{
			string status = m_blog->GetStatus();
			cout<<m_name<<","<<status<<endl;
		}
	private:
		string m_name;
		Blog *m_blog;
};


int main(void)
{
	Blog *blog = new BlogCSDN("lwe2");
	Observer *observer = new ObserverBlog("lwei",blog);
	blog->Attah(observer);
	blog->SetStatus("观察者模式");
	blog->Notify();
	delete blog;
	delete observer;
	return 0;
}









