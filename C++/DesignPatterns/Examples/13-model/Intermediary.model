

class Mediator;
class Person
{
	public:
		virtual void SetMediator(Mediator *mediator){}
		virtual void SendMessage(string message){}
		virtual void GetMessage(strin message){}
	protected:
		Mediator *m_mediator;
};

class Mediator
{
	public:
		virtual void Send(string message, Person *person){}
		virtual void SetA(Person *A){}
		virtual ovid SetB(Person *B){}
};

class Renter:public Person
{
	public:
		void SetMediator(Mediator *mediator)
		{
			m_mediator = mediator;
		}
		void SendMessage(string message)
		{
			m_medator->Send(message, this);
		}
		void GetMessage(string message)
		{
			cout<<"租房者受到信息"<<message;
		}
};

class Landlord:public Person
{
	public:
		void SetMediator(Mediator *mediator)
		{
			m_mediator = mediator;
		}
		void SendMessage(string message)
		{
			m_mediator->Send(message,this);
		}
		void GetMessage(string message)
		{
			cout<<"房东收到信息"<<message;
		}
};

class HouseMedator:public Mediator
{
	private:
		Person *m_A;
		Person *m_B;
	public:
		HouseMedator():m_A(0), m_B(0){}
		void SetA(Person *A)
		{
			m_A = A;
		}
		void SetB(Person *B)
		{
			m_B = B;
		}
		void Send(string message, Person *person)
		{
			if(person == m_A)
			  m_B->GetMessage(message);
			else
			  m_A->GetMessage(message);
		}
};

int main(void)
{
	Mediator *mediator = new HouseMedator();
	Person *person1 = new Renter();
	Person *person2 = new Landlord();
	mediator->SetA(person1);
	mediator->SetB(person2);

	person1->SetMediator(mediator);
	person2->SetMediator(mediator);
	person1->SendMessage("我想在南宁租房子，价格一个月600元\n");
	person2->SendMessage("出租房子:南宁民族大道,600元一个月\n");
	delete person1;
	delete person2;
	delete mediator;
	return 0;
}







































