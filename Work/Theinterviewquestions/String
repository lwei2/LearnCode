class String
{
	public:
		String(const char *str=NULL);
		String(const String &other);
		String &operator=(const String &other);
		~String();
	private:
		char *m_data;
};
String::String(const char *str)
{
	if(str==NULL)
	{
		m_data=new char[1];
		*m_data='\0';
	}
	else
	{
		m_data=new char[strlen(str)+1];
		strcpy(m_data,str);
	}
}
String::String(const String &other)
{
	m_data=new char[strlen(other.m_data)+1];
	strcpy(m_data,other.m_data);
}
String &String ::operator=(const String &other)
{
	if(this==&other)
		return *this;
	delete []m_data;
	m_data=new char[strlen(other.m_data)+1];
	strcpy(m_data,other.m_data);
	return *this;
}
String::~String()
{
	delete[]m_data;
}
